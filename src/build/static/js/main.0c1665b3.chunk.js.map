{"version":3,"sources":["serviceWorker.js","components/Session/context.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/Session/withAuthentication.js","constants/routes.js","components/Session/withAuthorization.js","components/Session/withEmailVerification.js","components/SignOut/index.js","constants/roles.js","components/Navigation/index.js","components/Memes/CommentItem.js","components/Memes/CommentList.js","components/Memes/MemItem.js","components/Memes/MemList.js","components/Memes/Memes.js","components/Memes/index.js","components/Memes/memBrowser.js","components/Landing/index.js","components/SignUp/index.js","components/PasswordForget/index.js","components/SignIn/index.js","components/PasswordChange/index.js","components/Account/index.js","components/Users/UserList.js","components/Users/UserItem.js","components/Admin/createMem.js","components/Admin/manageMemes.js","components/Admin/index.js","components/RandomMem/index.js","components/App/index.js","index.js"],"names":["Boolean","window","location","hostname","match","AuthUserContext","React","createContext","FirebaseContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","components_Firebase","Firebase","_this","this","classCallCheck","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignInWithGoogle","signInWithPopup","googleProvider","doSignInWithFacebook","facebookProvider","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doSendEmailVerification","currentUser","sendEmailVerification","url","doPasswordUpdate","updatePassword","onAuthUserListener","next","fallback","onAuthStateChanged","authUser","user","uid","once","then","snapshot","dbUser","val","roles","objectSpread","emailVerified","providerData","db","ref","concat","users","mem","memes","comment","id","likes","dislike","userId","app","initializeApp","serverValue","database","ServerValue","emailAuthProvider","EmailAuthProvider","GoogleAuthProvider","FacebookAuthProvider","withAuthentication","WithAuthentication","_React$Component","possibleConstructorReturn","getPrototypeOf","call","state","JSON","parse","localStorage","getItem","inherits","createClass","key","value","_this2","listener","setItem","stringify","setState","removeItem","context","Provider","LANDING","withAuthorization","condition","WithAuthorization","apply","arguments","history","push","compose","withRouter","withEmailVerification","WithEmailVerification","onSendEmailVerification","isSent","map","provider","providerId","includes","needsEmailVerification","type","onClick","disabled","_ref","ADMIN","SignedInLinks","className","NavLink","to","SignOut","SignedOutLinks","Sidenav","elem","document","querySelector","M","init","edge","elems","Collapsible","inDuration","href","style","marginLeft","data-target","NavigationInternal","Dropdown","coverTrigger","constrainWidth","outDuration","zIndex","Link","paddingLeft","Navigation_Sidenav","authenticated","Navigation_SignedInLinks","Navigation_SignedOutLinks","Navigation","Navigation_NavigationInternal","CommentItem","onRemoveComment","MemUid","index","set","onToggleCommentEditMode","CommentEditMode","editComment","onEditMessage","commentObj","message","commentSnapshot","objectWithoutProperties","editedAt","TIMESTAMP","onChangeeditComment","event","target","_this$state","_this$props","padding","onChange","username","Date","toLocaleTimeString","toLocaleDateString","createdAt","ROLES","CommentList","comments","i","Memes_CommentItem","MemItem","onToggleEditUrlMode","editUrlMode","editUrl","onChangeEditUrl","onSaveEditUrl","onEditMem","onSaveEditComment","onAddComment","onChangeComment","onLike","memSnapshot","like","update","onDislike","userLike","keys","filter","remove","title","tags","src","alt","length","Memes_CommentList","htmlFor","MemList","Memes_MemItem","MemesBase","Memes_MemList","Memes","MemBrowser","onSearchValue","onListenForMemes","searchValue","getMemesByTag","getAllMemes","loading","on","memObject","memesList","off","Landing","memBrowser","components_Memes","INITIAL_STATE","passwordOne","passwordTwo","isAdmin","error","ERROR_CODE_ACCOUNT_EXISTS","ERROR_MSG_ACCOUNT_EXISTS","SignUpFormBase","onSubmit","ROUTES","catch","code","preventDefault","defineProperty","name","onChangeCheckbox","checked","_this$state2","isInvalid","placeholder","SignUpLink","SignUpForm","SignUpPage","PasswordForgetFormBase","PasswordForgetLink","PasswordForgetPage","PasswordForgetForm","SignInFormBase","SignInGoogleBase","socialAuthUser","displayName","SignInFacebookBase","_this3","console","log","additionalUserInfo","profile","SignInForm","SignInGoogle","SignInFacebook","SignIn","PasswordForget_PasswordForgetLink","SignUp_SignUpLink","PasswordChangeForm","SIGN_IN_METHODS","LoginManagementBase","fetchSignInMethods","fetchSignInMethodsForEmail","activeSignInMethods","onSocialLoginLink","linkWithPopup","onDefaultLoginLink","credential","linkAndRetrieveDataWithCredential","onUnlink","unlink","signInMethod","onlyOneLeft","isEnabled","Account_DefaultLoginToggle","onLink","Account_SocialLoginToggle","SocialLoginToggle","DefaultLoginToggle","LoginManagement","PasswordChange","UserList","usersObject","usersList","pathname","UserItem","onSendPasswordResetEmail","params","CreateMem","onChangeUrl","onChangeTitle","onChangeTags","onSerializeTags","split","onCreateMem","onRemoveMem","createMem","manageMemes_MemList","manageMemes_MemItem","_this4","editTitle","onChangeEditTitle","onChangeEditTags","editTags","join","Switch","Route","exact","path","component","ManageMemes","API","RandomMem","getRandomMem","isLoading","fetch","response","ok","json","Error","data","image","caption","BrowserRouter","components_Navigation","LandingPage","SignInPage","AccountPage","AdminPage","ReactDOM","render","Firebase_context","components_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0c1665b3.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nconst AuthUserContext = React.createContext(null);\r\n\r\nexport default AuthUserContext;\r\n","import React from 'react';\r\n\r\nconst FirebaseContext = React.createContext(null);\r\n\r\nexport const withFirebase = Component => props => (\r\n  <FirebaseContext.Consumer>\r\n    {firebase => <Component {...props} firebase={firebase} />}\r\n  </FirebaseContext.Consumer>\r\n);\r\n\r\nexport default FirebaseContext;\r\n","import app from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\";\r\n\r\nconst config = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID\r\n};\r\n\r\nclass Firebase {\r\n  constructor() {\r\n    app.initializeApp(config);\r\n\r\n    /* Helper */\r\n\r\n    this.serverValue = app.database.ServerValue;\r\n    this.emailAuthProvider = app.auth.EmailAuthProvider;\r\n\r\n    /* Firebase APIs */\r\n\r\n    this.auth = app.auth();\r\n    this.db = app.database();\r\n\r\n    /* Social Sign In Method Provider */\r\n\r\n    this.googleProvider = new app.auth.GoogleAuthProvider();\r\n    this.facebookProvider = new app.auth.FacebookAuthProvider();\r\n  }\r\n\r\n  // *** Auth API ***\r\n\r\n  doCreateUserWithEmailAndPassword = (email, password) =>\r\n    this.auth.createUserWithEmailAndPassword(email, password);\r\n\r\n  doSignInWithEmailAndPassword = (email, password) =>\r\n    this.auth.signInWithEmailAndPassword(email, password);\r\n\r\n  doSignInWithGoogle = () => this.auth.signInWithPopup(this.googleProvider);\r\n\r\n  doSignInWithFacebook = () => this.auth.signInWithPopup(this.facebookProvider);\r\n\r\n  doSignOut = () => this.auth.signOut();\r\n\r\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\r\n\r\n  doSendEmailVerification = () =>\r\n    this.auth.currentUser.sendEmailVerification({\r\n      url: process.env.REACT_APP_CONFIRMATION_EMAIL_REDIRECT\r\n    });\r\n\r\n  doPasswordUpdate = password => this.auth.currentUser.updatePassword(password);\r\n\r\n  // *** Merge Auth and DB User API *** //\r\n\r\n  onAuthUserListener = (next, fallback) =>\r\n    this.auth.onAuthStateChanged(authUser => {\r\n      if (authUser) {\r\n        this.user(authUser.uid)\r\n          .once(\"value\")\r\n          .then(snapshot => {\r\n            const dbUser = snapshot.val();\r\n\r\n            // default empty roles\r\n            if (!dbUser.roles) {\r\n              dbUser.roles = [];\r\n            }\r\n\r\n            // merge auth and db user\r\n            authUser = {\r\n              uid: authUser.uid,\r\n              email: authUser.email,\r\n              emailVerified: authUser.emailVerified,\r\n              providerData: authUser.providerData,\r\n              ...dbUser\r\n            };\r\n\r\n            next(authUser);\r\n          });\r\n      } else {\r\n        fallback();\r\n      }\r\n    });\r\n\r\n  // *** Merge Auth and comments User API *** //\r\n\r\n  // *** User API ***\r\n\r\n  user = uid => this.db.ref(`users/${uid}`);\r\n\r\n  users = () => this.db.ref(\"users\");\r\n\r\n  // *** Mem API ***\r\n\r\n  mem = uid => this.db.ref(`memes/${uid}`);\r\n\r\n  memes = () => this.db.ref(\"memes\");\r\n\r\n  comment = (uid, id) => this.db.ref(`memes/${uid}/comments/${id}`);\r\n\r\n  likes = uid => this.db.ref(`memes/${uid}`);\r\n\r\n  dislike = (uid, userId) => this.db.ref(`memes/${uid}/likes/${userId}`);\r\n}\r\n\r\nexport default Firebase;\r\n","import FirebaseContext, { withFirebase } from './context';\r\nimport Firebase from './firebase';\r\n\r\nexport default Firebase;\r\n\r\nexport { FirebaseContext, withFirebase };\r\n","import React from \"react\";\r\n\r\nimport AuthUserContext from \"./context\";\r\nimport { withFirebase } from \"../Firebase\";\r\n\r\nconst withAuthentication = Component => {\r\n  class WithAuthentication extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n        authUser: JSON.parse(localStorage.getItem(\"authUser\"))\r\n      };\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.listener = this.props.firebase.onAuthUserListener(\r\n        authUser => {\r\n          localStorage.setItem(\"authUser\", JSON.stringify(authUser));\r\n          this.setState({ authUser });\r\n        },\r\n        () => {\r\n          localStorage.removeItem(\"authUser\");\r\n          this.setState({ authUser: null });\r\n        }\r\n      );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.listener();\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Provider value={this.state.authUser}>\r\n          <Component {...this.props} />\r\n        </AuthUserContext.Provider>\r\n      );\r\n    }\r\n  }\r\n\r\n  return withFirebase(WithAuthentication);\r\n};\r\n\r\nexport default withAuthentication;\r\n","export const LANDING = \"/\";\r\nexport const SIGN_UP = \"/signup\";\r\nexport const SIGN_IN = \"/signin\";\r\nexport const ACCOUNT = \"/account\";\r\nexport const PASSWORD_FORGET = \"/pw-forget\";\r\nexport const ADMIN = \"/admin\";\r\nexport const ADMIN_DETAILS = \"/admin/:id\";\r\nexport const ADMIN_MANAGE_MEMES = \"/admin/manageMemes\";\r\nexport const RANDOM_MEM = \"/randomMem\";\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\n\r\nimport AuthUserContext from './context';\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nconst withAuthorization = condition => Component => {\r\n  class WithAuthorization extends React.Component {\r\n    componentDidMount() {\r\n      this.listener = this.props.firebase.onAuthUserListener(\r\n        authUser => {\r\n          if (!condition(authUser)) {\r\n            this.props.history.push(ROUTES.SIGN_IN);\r\n          }\r\n        },\r\n        () => this.props.history.push(ROUTES.SIGN_IN),\r\n      );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.listener();\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Consumer>\r\n          {authUser =>\r\n            condition(authUser) ? <Component {...this.props} /> : null\r\n          }\r\n        </AuthUserContext.Consumer>\r\n      );\r\n    }\r\n  }\r\n\r\n  return compose(\r\n    withRouter,\r\n    withFirebase,\r\n  )(WithAuthorization);\r\n};\r\n\r\nexport default withAuthorization;\r\n","import React from 'react';\r\n\r\nimport AuthUserContext from './context';\r\nimport { withFirebase } from '../Firebase';\r\n\r\nconst needsEmailVerification = authUser =>\r\n  authUser &&\r\n  !authUser.emailVerified &&\r\n  authUser.providerData\r\n    .map(provider => provider.providerId)\r\n    .includes('password');\r\n\r\nconst withEmailVerification = Component => {\r\n  class WithEmailVerification extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = { isSent: false };\r\n    }\r\n\r\n    onSendEmailVerification = () => {\r\n      this.props.firebase\r\n        .doSendEmailVerification()\r\n        .then(() => this.setState({ isSent: true }));\r\n    };\r\n\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Consumer>\r\n          {authUser =>\r\n            needsEmailVerification(authUser) ? (\r\n              <div>\r\n                {this.state.isSent ? (\r\n                  <p>\r\n                    E-Mail confirmation sent: Check you E-Mails (Spam\r\n                    folder included) for a confirmation E-Mail.\r\n                    Refresh this page once you confirmed your E-Mail.\r\n                  </p>\r\n                ) : (\r\n                  <p>\r\n                    Verify your E-Mail: Check you E-Mails (Spam folder\r\n                    included) for a confirmation E-Mail or send\r\n                    another confirmation E-Mail.\r\n                  </p>\r\n                )}\r\n\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={this.onSendEmailVerification}\r\n                  disabled={this.state.isSent}\r\n                >\r\n                  Send confirmation E-Mail\r\n                </button>\r\n              </div>\r\n            ) : (\r\n              <Component {...this.props} />\r\n            )\r\n          }\r\n        </AuthUserContext.Consumer>\r\n      );\r\n    }\r\n  }\r\n\r\n  return withFirebase(WithEmailVerification);\r\n};\r\n\r\nexport default withEmailVerification;\r\n","import React from 'react';\r\n\r\nimport { withFirebase } from '../Firebase';\r\n\r\nconst SignOutButton = ({ firebase }) => (\r\n  <button type=\"button\" onClick={firebase.doSignOut}>\r\n    Sign Out\r\n  </button>\r\n);\r\n\r\nexport default withFirebase(SignOutButton);\r\n","export const ADMIN = 'ADMIN';\r\n","import React, { Component } from 'react'\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport M from \"materialize-css\"\r\n\r\n\r\nimport { AuthUserContext } from \"../Session\";\r\nimport SignOutButton from \"../SignOut\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\nimport * as ROLES from \"../../constants/roles\";\r\n\r\nconst Navigation = () => (\r\n  <AuthUserContext.Consumer>\r\n    {authUser =>\r\n      authUser ? <NavigationInternal authenticated={true} /> : <NavigationInternal authenticated={false}/>\r\n    }\r\n  </AuthUserContext.Consumer>\r\n);\r\n\r\n\r\n\r\nconst SignedInLinks = () => {\r\n  return (\r\n    <div>\r\n      <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n        <li><NavLink to={ROUTES.ACCOUNT}>Your profile</NavLink></li>\r\n        <SignOutButton/>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst SignedOutLinks = () => {\r\n  return (\r\n    <div>\r\n      <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n        <li><NavLink to={ROUTES.SIGN_UP}>Sign up</NavLink></li>\r\n        <li><NavLink to={ROUTES.SIGN_IN}>Sign in</NavLink></li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nclass Sidenav extends Component {\r\n  componentDidMount() {\r\n    var elem = document.querySelector(\".sidenav\");\r\n    M.Sidenav.init(elem, {\r\n        edge: \"right\",\r\n    });\r\n    var elems = document.querySelector('.collapsible');\r\n    M.Collapsible.init(elems, {\r\n      inDuration: 380,\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ul id=\"mobile-demo\" className=\"sidenav\">\r\n          <li>\r\n            <ul className=\"collapsible\">\r\n              <li>\r\n                <div className=\"collapsible-header black-text\"><i className=\"material-icons collapsible-secondary\">arrow_drop_down</i><b>Categories</b></div>\r\n                <div className=\"collapsible-body black-text\">\r\n                  <a href='#' className=\"black-text sidenav-close\"><span style={{marginLeft: 16}}>Category</span></a>\r\n                  <a href='#' className=\"black-text sidenav-close\"><span style={{marginLeft: 16}}>Category</span></a>\r\n                  <a href='#' className=\"black-text sidenav-close\"><span style={{marginLeft: 16}}>Category</span></a>\r\n                  <a href='#' className=\"black-text sidenav-close\"><span style={{marginLeft: 16}}>Category</span></a>\r\n                  <a href='#' className=\"black-text sidenav-close\"><span style={{marginLeft: 16}}>Category</span></a>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n          <li><NavLink to={ROUTES.RANDOM_MEM} className=\"sidenav-close\">Random meme</NavLink></li>\r\n          <li><NavLink to={ROUTES.SIGN_UP} className=\"sidenav-close\">Sign up</NavLink></li>\r\n          <li><NavLink to={ROUTES.SIGN_IN} className=\"sidenav-close\">Sign in</NavLink></li>\r\n          <li><NavLink to={ROUTES.ACCOUNT} className=\"sidenav-close\">Your profile</NavLink></li>\r\n          <li><NavLink to={ROUTES.ACCOUNT} className=\"red-text sidenav-close\">Sign out</NavLink></li>\r\n        </ul>\r\n        <a href=\"#\" data-target=\"mobile-demo\" className=\"sidenav-trigger right\"><i className=\"material-icons\" >menu</i></a>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nclass NavigationInternal extends Component {\r\n  componentDidMount(){\r\n    var elem = document.querySelector(\".dropdown-trigger\");\r\n    M.Dropdown.init(elem,{\r\n      coverTrigger: false,\r\n      constrainWidth: false,\r\n      inDuration: 380,\r\n      outDuration: 380,\r\n    });\r\n  }\r\n  render(){\r\n    return (\r\n      <div className=\"navbar-fixed\" style={{zIndex: 999}}>\r\n        <nav className=\"nav-extended\">\r\n          <div className=\"nav-wrapper grey darken-3\">\r\n          <Link to='/' className=\"brand-logo orange-text text-darken-2 left\" style={{paddingLeft: 10}}>HalfLajf</Link>\r\n          <Sidenav/>\r\n          {this.props.authenticated? <SignedInLinks /> : <SignedOutLinks />}\r\n          <ul className=\"right hide-on-med-and-down\">\r\n            <ul id=\"dropdown1\" className=\"dropdown-content\">\r\n              <li><a href=\"#\" className=\"black-text\">Category 1</a></li>\r\n              <li className=\"divider\"></li>\r\n              <li><a href=\"#\" className=\"black-text\">Category 2</a></li>\r\n              <li className=\"divider\"></li>\r\n              <li><a href=\"#\" className=\"black-text\">Category 3</a></li>\r\n            </ul>\r\n            <li><a className=\"dropdown-trigger\" href=\"#!\" data-target=\"dropdown1\">Categories<i className=\"material-icons right\">arrow_drop_down</i></a></li>\r\n            <li><Link to={ROUTES.RANDOM_MEM}>Random meme</Link></li>\r\n          </ul>\r\n        </div>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navigation;\r\n","import React, { Component } from \"react\";\r\nimport { withFirebase } from \"../Firebase\";\r\nimport * as ROLES from \"../../constants/roles\";\r\n\r\nclass CommentItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      CommentEditMode: false,\r\n      editComment: this.props.comment.comment\r\n    };\r\n  }\r\n  onRemoveComment = (MemUid, index) => {\r\n    this.props.firebase.comment(MemUid, index).set([]);\r\n    //zrobic tak ze pobeirac cale i setowac bez elementu odnawaijac comments[]\r\n  };\r\n\r\n  onToggleCommentEditMode = () => {\r\n    this.setState(state => ({\r\n      CommentEditMode: !state.CommentEditMode,\r\n      editComment: this.props.comment.comment\r\n    }));\r\n  };\r\n\r\n  onEditMessage = (MemUid, commentObj, message, index) => {\r\n    const { comment, ...commentSnapshot } = commentObj;\r\n\r\n    this.props.firebase.comment(MemUid, index).set({\r\n      ...commentSnapshot,\r\n      editedAt: this.props.firebase.serverValue.TIMESTAMP,\r\n      comment: message\r\n    });\r\n\r\n    this.setState({ CommentEditMode: false });\r\n  };\r\n\r\n  onChangeeditComment = event => {\r\n    this.setState({ editComment: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { CommentEditMode, editComment } = this.state;\r\n    const { comment, index, MemUid, authUser } = this.props;\r\n\r\n    return (\r\n      <div style={{padding:3}}>\r\n        {CommentEditMode ? (\r\n          <input\r\n            type=\"text\"\r\n            value={editComment}\r\n            onChange={this.onChangeeditComment}\r\n          />\r\n        ) : (\r\n          <span>\r\n            Created by: {comment.username || comment.userId} <br />\r\n            {comment.comment}\r\n            {!comment.editedAt ? (\r\n              <div>\r\n                Created At:{\" \"}\r\n                {new Date(comment.createdAt).toLocaleTimeString(\"en-US\")}{\" \"}\r\n                {new Date(comment.createdAt).toLocaleDateString(\"en-US\")}\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                Edited At:{\" \"}\r\n                {new Date(comment.editedAt).toLocaleTimeString(\"en-US\")}{\" \"}\r\n                {new Date(comment.editedAt).toLocaleDateString(\"en-US\")}\r\n              </div>\r\n            )}\r\n          </span>\r\n        )}\r\n        {!authUser ? (\r\n          <span />\r\n        ) : (\r\n          <span>\r\n            {authUser.roles.includes(ROLES.ADMIN) && (\r\n              <span>\r\n                {CommentEditMode ? (\r\n                  <span>\r\n                    <button\r\n                      onClick={() =>\r\n                        this.onEditMessage(MemUid, comment, editComment, index)\r\n                      }\r\n                    >\r\n                      Save\r\n                    </button>\r\n                    <button onClick={this.onToggleCommentEditMode}>\r\n                      Cofnij\r\n                    </button>\r\n                  </span>\r\n                ) : (\r\n                  <button onClick={this.onToggleCommentEditMode}>Edit</button>\r\n                )}\r\n\r\n                {!CommentEditMode && (\r\n                  <button onClick={() => this.onRemoveComment(MemUid, index)}>\r\n                    Delete comment\r\n                  </button>\r\n                )}\r\n              </span>\r\n            )}\r\n            {authUser.uid === comment.userId &&\r\n              !authUser.roles.includes(ROLES.ADMIN) && (\r\n                <span>\r\n                  {CommentEditMode ? (\r\n                    <span>\r\n                      <button\r\n                        onClick={() =>\r\n                          this.onEditMessage(\r\n                            MemUid,\r\n                            comment,\r\n                            editComment,\r\n                            index\r\n                          )\r\n                        }\r\n                      >\r\n                        Save\r\n                      </button>\r\n                      <button onClick={this.onToggleCommentEditMode}>\r\n                        Cofnij\r\n                      </button>\r\n                    </span>\r\n                  ) : (\r\n                    <button onClick={this.onToggleCommentEditMode}>Edit</button>\r\n                  )}\r\n\r\n                  {!CommentEditMode && (\r\n                    <button onClick={() => this.onRemoveComment(MemUid, index)}>\r\n                      Delete comment\r\n                    </button>\r\n                  )}\r\n                </span>\r\n              )}\r\n          </span>\r\n        )}\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withFirebase(CommentItem);\r\n","import React from \"react\";\r\nimport CommentItem from \"./CommentItem\";\r\n\r\nconst CommentList = ({ comments, MemUid, authUser }) => (\r\n  <ul className=\"comment section\">\r\n    {comments.map((comment, i) => (\r\n      <li>\r\n      <CommentItem\r\n        key={i}\r\n        comment={comment}\r\n        index={i}\r\n        MemUid={MemUid}\r\n        authUser={authUser}\r\n      />\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default CommentList;\r\n","import React, { Component } from \"react\";\r\nimport CommentList from \"./CommentList\";\r\nimport { withFirebase } from \"../Firebase\";\r\n\r\nclass MemItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      editUrlMode: false,\r\n      editUrl: this.props.mem.url,\r\n      comment: \"\",\r\n      likes: []\r\n    };\r\n  }\r\n  onToggleEditUrlMode = () => {\r\n    this.setState(state => ({\r\n      editUrlMode: !state.editUrlMode,\r\n      editUrl: this.props.mem.url\r\n    }));\r\n  };\r\n\r\n  onChangeEditUrl = event => {\r\n    this.setState({ editUrl: event.target.value });\r\n  };\r\n\r\n  onSaveEditUrl = () => {\r\n    this.props.onEditMem(this.props.mem, this.state.editUrl);\r\n\r\n    this.setState({ editUrlMode: false });\r\n  };\r\n\r\n  onSaveEditComment = () => {\r\n    this.props.onAddComment(\r\n      this.props.mem,\r\n      this.state.comment,\r\n      this.props.authUser\r\n    );\r\n\r\n    this.setState({ editUrlMode: false, comment: \"\" });\r\n  };\r\n\r\n  onChangeComment = event => {\r\n    this.setState({ comment: event.target.value });\r\n  };\r\n\r\n  onLike = (mem, userId) => {\r\n    let { likes, ...memSnapshot } = mem;\r\n\r\n    let like = {\r\n      userId: userId\r\n    };\r\n\r\n    if (!likes) likes = [];\r\n\r\n    likes.push(like);\r\n    this.props.firebase.likes(mem.uid).update({\r\n      ...memSnapshot,\r\n      likes\r\n    });\r\n  };\r\n  onDislike = (mem, userId) => {\r\n    let likes;\r\n    if (mem.likes) {\r\n      likes = Object.keys(mem.likes).map(key => ({\r\n        ...mem.likes[key],\r\n        uid: key\r\n      }));\r\n\r\n      const userLike = likes.filter(like => like.userId === userId);\r\n\r\n      this.props.firebase.dislike(mem.uid, userLike[0].uid).remove();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { authUser, mem } = this.props;\r\n    const { editUrlMode, editUrl, comment } = this.state;\r\n\r\n    return (\r\n      <li className=\"card z-depth-1 meme-summary\">\r\n        {editUrlMode ? (\r\n          <input type=\"text\" value={editUrl} onChange={this.onChangeEditUrl} />\r\n        ) : (\r\n          <span className=\"card-image\">\r\n            <strong>\r\n              <h2>{mem.title}</h2>\r\n              Created by: {mem.username || mem.userId} <br />\r\n              Tags: {mem.tags} <br />\r\n              {!mem.editedAt ? (\r\n                <div>\r\n                  Created At:{\" \"}\r\n                  {new Date(mem.createdAt).toLocaleTimeString(\"en-US\")}{\" \"}\r\n                  {new Date(mem.createdAt).toLocaleDateString(\"en-US\")}\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  Edited At:{\" \"}\r\n                  {new Date(mem.editedAt).toLocaleTimeString(\"en-US\")}{\" \"}\r\n                  {new Date(mem.editedAt).toLocaleDateString(\"en-US\")}\r\n                </div>\r\n              )}\r\n            </strong>{\" \"}\r\n            <img style={{ padding: 4 }} src={mem.url} alt=\"\" />\r\n          </span>\r\n        )}\r\n        {!authUser ? (\r\n          <div>\r\n            <span>Likes</span>{\" \"}\r\n            {!mem.likes ? (\r\n              <span>0</span>\r\n            ) : (\r\n              <span>{mem.likes.filter(like => like != null).length}</span>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <span>\r\n            <div>\r\n              <span>Likes</span>{\" \"}\r\n              {!mem.likes ? (\r\n                <span>\r\n                  <span>0</span>\r\n                  <button onClick={() => this.onLike(mem, authUser.uid)}>\r\n                    like\r\n                  </button>\r\n                </span>\r\n              ) : (\r\n                <span>\r\n                  <span>{mem.likes.filter(like => like != null).length}</span>\r\n                  {mem.likes.filter(user => user.userId === authUser.uid)\r\n                    .length ? (\r\n                    <span>\r\n                      <button onClick={() => this.onDislike(mem, authUser.uid)}>\r\n                        dislike\r\n                      </button>\r\n                    </span>\r\n                  ) : (\r\n                    <button onClick={() => this.onLike(mem, authUser.uid)}>\r\n                      like\r\n                    </button>\r\n                  )}\r\n                </span>\r\n              )}\r\n            </div>\r\n          </span>\r\n        )}\r\n\r\n        {mem.comments ? (\r\n          <div>\r\n            {\" \"}\r\n            Comments:\r\n            <CommentList\r\n              comments={mem.comments}\r\n              MemUid={mem.uid}\r\n              authUser={authUser}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <div>There are no comments ...</div>\r\n        )}\r\n        {!authUser ? (\r\n          <span />\r\n        ) : (\r\n          <div>\r\n            <div className=\"input-field\">\r\n              <i className=\"material-icons prefix\">border_color</i>\r\n              <input\r\n                className=\"materialize-textarea\"\r\n                id=\"userComment\"\r\n                type=\"text\"\r\n                value={comment}\r\n                onChange={this.onChangeComment}\r\n              />\r\n              <label htmlFor=\"userComment\">\r\n                Share your thoughts about this meme\r\n              </label>\r\n            </div>\r\n            <span className=\"input-field\" style={{ padding: 2 }}>\r\n              <button\r\n                onClick={this.onSaveEditComment}\r\n                className=\"btn orange darken-2 z-depth-1\"\r\n              >\r\n                Add comment\r\n              </button>\r\n            </span>\r\n          </div>\r\n        )}\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withFirebase(MemItem);\r\n","import React from \"react\";\r\n\r\nimport MemItem from \"./MemItem\";\r\n\r\nconst MemList = ({ memes, authUser, onAddComment }) => (\r\n  <ul>\r\n    {memes.map(mem => (\r\n      <MemItem\r\n        key={mem.uid}\r\n        mem={mem}\r\n        authUser={authUser}\r\n        onAddComment={onAddComment}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default MemList;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { AuthUserContext } from \"../Session\";\r\nimport { withFirebase } from \"../Firebase\";\r\nimport MemList from \"./MemList\";\r\n\r\nclass MemesBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  onAddComment = (mem, message, authUser) => {\r\n    const { uid, ...memSnapshot } = mem;\r\n    let { comments } = mem;\r\n    if (!authUser.username) authUser.username = \"Annymous\";\r\n    let comment = {\r\n      userId: authUser.uid,\r\n      username: authUser.username,\r\n      createdAt: this.props.firebase.serverValue.TIMESTAMP,\r\n      comment: message\r\n    };\r\n\r\n    if (!comments) comments = [];\r\n\r\n    comments.push(comment);\r\n    this.props.firebase.mem(mem.uid).set({\r\n      ...memSnapshot,\r\n      comments\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { memes } = this.props;\r\n    return (\r\n      <AuthUserContext.Consumer>\r\n        {authUser => (\r\n          <div>\r\n            {memes ? (\r\n              <MemList\r\n                authUser={authUser}\r\n                memes={memes}\r\n                onAddComment={this.onAddComment}\r\n              />\r\n            ) : (\r\n              <div />\r\n            )}\r\n          </div>\r\n        )}\r\n      </AuthUserContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withFirebase(MemesBase);\r\n","import Memes from \"./Memes\";\r\n\r\nexport default Memes;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { withFirebase } from \"../Firebase\";\r\nimport Memes from \"./Memes\";\r\n\r\nclass MemBrowser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      memes: [],\r\n      searchValue: \"\",\r\n      loading: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.onListenForMemes();\r\n  }\r\n\r\n  onListenForMemes() {\r\n    this.setState({ loading: true });\r\n    this.props.firebase.memes().on(\"value\", snapshot => {\r\n      const memObject = snapshot.val();\r\n\r\n      if (memObject) {\r\n        const memesList = Object.keys(memObject).map(key => ({\r\n          ...memObject[key],\r\n          uid: key\r\n        }));\r\n        this.setState({ memes: memesList, loading: false });\r\n      } else {\r\n        this.setState({ memes: null, loading: false });\r\n      }\r\n      this.setState({ loading: false });\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.firebase.memes().off();\r\n  }\r\n\r\n  onSearchValue = event => {\r\n    this.onListenForMemes();\r\n    this.setState({ searchValue: event.target.value }, () =>\r\n      this.getMemesByTag()\r\n    );\r\n  };\r\n\r\n  getMemesByTag = () => {\r\n    this.setState({\r\n      memes: this.state.memes.filter(mem =>\r\n        mem.tags.includes(this.state.searchValue)\r\n      )\r\n    });\r\n  };\r\n\r\n  getAllMemes = () => {\r\n    this.onListenForMemes();\r\n  };\r\n\r\n  render() {\r\n    const { memes, loading } = this.state;\r\n\r\n    return (\r\n      <div className=\"row col s12 m8 offset-m2\">\r\n        <span>\r\n        <button onClick={this.onSearchValue} value=\"#janusz\">\r\n          #janusz\r\n        </button>\r\n        <button onClick={this.onSearchValue} value=\"#zwierze\">\r\n          #zwierze\r\n        </button>\r\n        <button onClick={this.onSearchValue} value=\"#maciek\">\r\n          #maciek\r\n        </button>\r\n        <button onClick={this.getAllMemes}>wszystkie</button>\r\n        </span>\r\n        {loading ? (\r\n          <div>Loading...</div>\r\n        ) : (\r\n          <span>\r\n            {memes.length ? (\r\n              <Memes memes={memes} loading={loading} />\r\n            ) : (\r\n              <div>There are no memes ...</div>\r\n            )}\r\n          </span>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withFirebase(MemBrowser);\r\n","import React from \"react\";\r\nimport Memes from \"../Memes\";\r\nimport MemBrowser from \"../Memes/memBrowser\";\r\n\r\nconst Landing = () => (\r\n  <div className=\"dashboard container\">\r\n    <span>\r\n      <MemBrowser />\r\n      <Memes />\r\n    </span>\r\n  </div>\r\n);\r\n\r\nexport default Landing;\r\n","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nimport { withFirebase } from \"../Firebase\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\nimport * as ROLES from \"../../constants/roles\";\r\n\r\nconst SignUpPage = () => (\r\n  <div>\r\n    <h1>SignUp</h1>\r\n    <SignUpForm />\r\n  </div>\r\n);\r\n\r\nconst INITIAL_STATE = {\r\n  username: \"\",\r\n  email: \"\",\r\n  passwordOne: \"\",\r\n  passwordTwo: \"\",\r\n  isAdmin: false,\r\n  error: null\r\n};\r\n\r\nconst ERROR_CODE_ACCOUNT_EXISTS = \"auth/email-already-in-use\";\r\n\r\nconst ERROR_MSG_ACCOUNT_EXISTS = `\r\n  An account with this E-Mail address already exists.\r\n  Try to login with this account instead. If you think the\r\n  account is already used from one of the social logins, try\r\n  to sign in with one of them. Afterward, associate your accounts\r\n  on your personal account page.\r\n`;\r\n\r\nclass SignUpFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { username, email, passwordOne, isAdmin } = this.state;\r\n    const roles = [];\r\n\r\n    if (isAdmin) {\r\n      roles.push(ROLES.ADMIN);\r\n    }\r\n\r\n    this.props.firebase\r\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\r\n      .then(authUser => {\r\n        // Create a user in your Firebase realtime database\r\n        return this.props.firebase.user(authUser.user.uid).set({\r\n          username,\r\n          email,\r\n          roles\r\n        });\r\n      })\r\n      .then(() => {\r\n        return this.props.firebase.doSendEmailVerification();\r\n      })\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n        this.props.history.push(ROUTES.LANDING);\r\n      })\r\n      .catch(error => {\r\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\r\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\r\n        }\r\n\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  onChangeCheckbox = event => {\r\n    this.setState({ [event.target.name]: event.target.checked });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      username,\r\n      email,\r\n      passwordOne,\r\n      passwordTwo,\r\n      isAdmin,\r\n      error\r\n    } = this.state;\r\n\r\n    const isInvalid =\r\n      passwordOne !== passwordTwo ||\r\n      passwordOne === \"\" ||\r\n      email === \"\" ||\r\n      username === \"\";\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"username\"\r\n          value={username}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Full Name\"\r\n        />\r\n        <input\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Email Address\"\r\n        />\r\n        <input\r\n          name=\"passwordOne\"\r\n          value={passwordOne}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n        />\r\n        <input\r\n          name=\"passwordTwo\"\r\n          value={passwordTwo}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Confirm Password\"\r\n        />\r\n        <label>\r\n          Admin:\r\n          <input\r\n            name=\"isAdmin\"\r\n            type=\"checkbox\"\r\n            checked={isAdmin}\r\n            onChange={this.onChangeCheckbox}\r\n          />\r\n        </label>\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Sign Up\r\n        </button>\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst SignUpLink = () => (\r\n  <p>\r\n    Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\r\n  </p>\r\n);\r\n\r\nconst SignUpForm = withRouter(withFirebase(SignUpFormBase));\r\n\r\nexport default SignUpPage;\r\n\r\nexport { SignUpForm, SignUpLink };\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nconst PasswordForgetPage = () => (\r\n  <div>\r\n    <h1>PasswordForget</h1>\r\n    <PasswordForgetForm />\r\n  </div>\r\n);\r\n\r\nconst INITIAL_STATE = {\r\n  email: '',\r\n  error: null,\r\n};\r\n\r\nclass PasswordForgetFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { email } = this.state;\r\n\r\n    this.props.firebase\r\n      .doPasswordReset(email)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { email, error } = this.state;\r\n\r\n    const isInvalid = email === '';\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"email\"\r\n          value={this.state.email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Email Address\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Reset My Password\r\n        </button>\r\n\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst PasswordForgetLink = () => (\r\n  <p>\r\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\r\n  </p>\r\n);\r\n\r\nexport default PasswordForgetPage;\r\n\r\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\r\n\r\nexport { PasswordForgetForm, PasswordForgetLink };\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"recompose\";\r\n\r\nimport { SignUpLink } from \"../SignUp\";\r\nimport { PasswordForgetLink } from \"../PasswordForget\";\r\nimport { withFirebase } from \"../Firebase\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\n\r\nconst SignInPage = () => (\r\n  <div>\r\n    <h1>SignIn</h1>\r\n    <SignInForm />\r\n    <SignInGoogle />\r\n    <SignInFacebook />\r\n    <PasswordForgetLink />\r\n    <SignUpLink />\r\n  </div>\r\n);\r\n\r\nconst INITIAL_STATE = {\r\n  email: \"\",\r\n  password: \"\",\r\n  error: null\r\n};\r\n\r\nconst ERROR_CODE_ACCOUNT_EXISTS =\r\n  \"auth/account-exists-with-different-credential\";\r\n\r\nconst ERROR_MSG_ACCOUNT_EXISTS = `\r\n  An account with an E-Mail address to\r\n  this social account already exists. Try to login from\r\n  this account instead and associate your social accounts on\r\n  your personal account page.\r\n`;\r\n\r\nclass SignInFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { email, password } = this.state;\r\n\r\n    this.props.firebase\r\n      .doSignInWithEmailAndPassword(email, password)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n        this.props.history.push(ROUTES.LANDING);\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { email, password, error } = this.state;\r\n\r\n    const isInvalid = password === \"\" || email === \"\";\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Email Address\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Sign In\r\n        </button>\r\n\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nclass SignInGoogleBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { error: null };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    this.props.firebase\r\n      .doSignInWithGoogle()\r\n      .then(socialAuthUser => {\r\n        // Create a user in your Firebase Realtime Database too\r\n        return this.props.firebase.user(socialAuthUser.user.uid).set({\r\n          username: socialAuthUser.user.displayName,\r\n          email: socialAuthUser.user.email,\r\n          roles: []\r\n        });\r\n      })\r\n      .then(() => {\r\n        this.setState({ error: null });\r\n        this.props.history.push(ROUTES.LANDING);\r\n      })\r\n      .catch(error => {\r\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\r\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\r\n        }\r\n\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    const { error } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <button type=\"submit\">Sign In with Google</button>\r\n\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nclass SignInFacebookBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { error: null };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    this.props.firebase\r\n      .doSignInWithFacebook()\r\n      .then(socialAuthUser => {\r\n        {\r\n          console.log(socialAuthUser);\r\n        }\r\n        // Create a user in your Firebase Realtime Database too\r\n        return this.props.firebase.user(socialAuthUser.user.uid).set({\r\n          username: socialAuthUser.additionalUserInfo.profile.name,\r\n          //email: socialAuthUser.additionalUserInfo.profile.email,\r\n          roles: []\r\n        });\r\n      })\r\n      .then(() => {\r\n        this.setState({ error: null });\r\n        this.props.history.push(ROUTES.LANDING);\r\n      })\r\n      .catch(error => {\r\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\r\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\r\n        }\r\n\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    const { error } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <button type=\"submit\">Sign In with Facebook</button>\r\n        {console.log(error)}\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst SignInForm = compose(\r\n  withRouter,\r\n  withFirebase\r\n)(SignInFormBase);\r\n\r\nconst SignInGoogle = compose(\r\n  withRouter,\r\n  withFirebase\r\n)(SignInGoogleBase);\r\n\r\nconst SignInFacebook = compose(\r\n  withRouter,\r\n  withFirebase\r\n)(SignInFacebookBase);\r\n\r\nexport default SignInPage;\r\n\r\nexport { SignInForm, SignInGoogle, SignInFacebook };\r\n","import React, { Component } from 'react';\r\n\r\nimport { withFirebase } from '../Firebase';\r\n\r\nconst INITIAL_STATE = {\r\n  passwordOne: '',\r\n  passwordTwo: '',\r\n  error: null,\r\n};\r\n\r\nclass PasswordChangeForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { passwordOne } = this.state;\r\n\r\n    this.props.firebase\r\n      .doPasswordUpdate(passwordOne)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { passwordOne, passwordTwo, error } = this.state;\r\n\r\n    const isInvalid =\r\n      passwordOne !== passwordTwo || passwordOne === '';\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"passwordOne\"\r\n          value={passwordOne}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"New Password\"\r\n        />\r\n        <input\r\n          name=\"passwordTwo\"\r\n          value={passwordTwo}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Confirm New Password\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Reset My Password\r\n        </button>\r\n\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withFirebase(PasswordChangeForm);\r\n","import React, { Component } from \"react\";\r\nimport { compose } from \"recompose\";\r\n\r\nimport {\r\n  AuthUserContext,\r\n  withAuthorization,\r\n  withEmailVerification\r\n} from \"../Session\";\r\nimport { withFirebase } from \"../Firebase\";\r\nimport { PasswordForgetForm } from \"../PasswordForget\";\r\nimport PasswordChangeForm from \"../PasswordChange\";\r\n\r\nconst SIGN_IN_METHODS = [\r\n  {\r\n    id: \"password\",\r\n    provider: null\r\n  },\r\n  {\r\n    id: \"google.com\",\r\n    provider: \"googleProvider\"\r\n  },\r\n  {\r\n    id: \"facebook.com\",\r\n    provider: \"facebookProvider\"\r\n  }\r\n];\r\n\r\nconst AccountPage = () => (\r\n  <AuthUserContext.Consumer>\r\n    {authUser => (\r\n      <div>\r\n        <h1>Account: {authUser.email}</h1>\r\n        <PasswordForgetForm />\r\n        <PasswordChangeForm />\r\n        <LoginManagement authUser={authUser} />\r\n      </div>\r\n    )}\r\n  </AuthUserContext.Consumer>\r\n);\r\n\r\nclass LoginManagementBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      activeSignInMethods: [],\r\n      error: null\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchSignInMethods();\r\n  }\r\n\r\n  fetchSignInMethods = () => {\r\n    this.props.firebase.auth\r\n      .fetchSignInMethodsForEmail(this.props.authUser.email)\r\n      .then(activeSignInMethods =>\r\n        this.setState({ activeSignInMethods, error: null })\r\n      )\r\n      .catch(error => this.setState({ error }));\r\n  };\r\n\r\n  onSocialLoginLink = provider => {\r\n    this.props.firebase.auth.currentUser\r\n      .linkWithPopup(this.props.firebase[provider])\r\n      .then(this.fetchSignInMethods)\r\n      .catch(error => this.setState({ error }));\r\n  };\r\n\r\n  onDefaultLoginLink = password => {\r\n    const credential = this.props.firebase.emailAuthProvider.credential(\r\n      this.props.authUser.email,\r\n      password\r\n    );\r\n\r\n    this.props.firebase.auth.currentUser\r\n      .linkAndRetrieveDataWithCredential(credential)\r\n      .then(this.fetchSignInMethods)\r\n      .catch(error => this.setState({ error }));\r\n  };\r\n\r\n  onUnlink = providerId => {\r\n    this.props.firebase.auth.currentUser\r\n      .unlink(providerId)\r\n      .then(this.fetchSignInMethods)\r\n      .catch(error => this.setState({ error }));\r\n  };\r\n\r\n  render() {\r\n    const { activeSignInMethods, error } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        Sign In Methods:\r\n        <ul>\r\n          {SIGN_IN_METHODS.map(signInMethod => {\r\n            const onlyOneLeft = activeSignInMethods.length === 1;\r\n            const isEnabled = activeSignInMethods.includes(signInMethod.id);\r\n\r\n            return (\r\n              <li key={signInMethod.id}>\r\n                {signInMethod.id === \"password\" ? (\r\n                  <DefaultLoginToggle\r\n                    onlyOneLeft={onlyOneLeft}\r\n                    isEnabled={isEnabled}\r\n                    signInMethod={signInMethod}\r\n                    onLink={this.onDefaultLoginLink}\r\n                    onUnlink={this.onUnlink}\r\n                  />\r\n                ) : (\r\n                  <SocialLoginToggle\r\n                    onlyOneLeft={onlyOneLeft}\r\n                    isEnabled={isEnabled}\r\n                    signInMethod={signInMethod}\r\n                    onLink={this.onSocialLoginLink}\r\n                    onUnlink={this.onUnlink}\r\n                  />\r\n                )}\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n        {error && error.message}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst SocialLoginToggle = ({\r\n  onlyOneLeft,\r\n  isEnabled,\r\n  signInMethod,\r\n  onLink,\r\n  onUnlink\r\n}) =>\r\n  isEnabled ? (\r\n    <button\r\n      type=\"button\"\r\n      onClick={() => onUnlink(signInMethod.id)}\r\n      disabled={onlyOneLeft}\r\n    >\r\n      Deactivate {signInMethod.id}\r\n    </button>\r\n  ) : (\r\n    <button type=\"button\" onClick={() => onLink(signInMethod.provider)}>\r\n      Link {signInMethod.id}\r\n    </button>\r\n  );\r\n\r\nclass DefaultLoginToggle extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { passwordOne: \"\", passwordTwo: \"\" };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    this.props.onLink(this.state.passwordOne);\r\n    this.setState({ passwordOne: \"\", passwordTwo: \"\" });\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { onlyOneLeft, isEnabled, signInMethod, onUnlink } = this.props;\r\n\r\n    const { passwordOne, passwordTwo } = this.state;\r\n\r\n    const isInvalid = passwordOne !== passwordTwo || passwordOne === \"\";\r\n\r\n    return isEnabled ? (\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => onUnlink(signInMethod.id)}\r\n        disabled={onlyOneLeft}\r\n      >\r\n        Deactivate {signInMethod.id}\r\n      </button>\r\n    ) : (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"passwordOne\"\r\n          value={passwordOne}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"New Password\"\r\n        />\r\n        <input\r\n          name=\"passwordTwo\"\r\n          value={passwordTwo}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Confirm New Password\"\r\n        />\r\n\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Link {signInMethod.id}\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst LoginManagement = withFirebase(LoginManagementBase);\r\n\r\nconst condition = authUser => !!authUser;\r\n\r\nexport default compose(\r\n  withEmailVerification,\r\n  withAuthorization(condition)\r\n)(AccountPage);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { withFirebase } from \"../Firebase\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\n\r\nclass UserList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      loading: false,\r\n      users: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n\r\n    this.props.firebase.users().on(\"value\", snapshot => {\r\n      const usersObject = snapshot.val();\r\n\r\n      const usersList = Object.keys(usersObject).map(key => ({\r\n        ...usersObject[key],\r\n        uid: key\r\n      }));\r\n\r\n      this.setState({\r\n        users: usersList,\r\n        loading: false\r\n      });\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.firebase.users().off();\r\n  }\r\n\r\n  render() {\r\n    const { users, loading } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        {\" \"}\r\n        <div>\r\n          <Link\r\n            to={{\r\n              pathname: `${ROUTES.ADMIN_MANAGE_MEMES}`\r\n            }}\r\n          >\r\n            Manage memes\r\n          </Link>\r\n        </div>\r\n        <h2>Users</h2>\r\n        {loading && <div>Loading ...</div>}\r\n        <ul>\r\n          {users.map(user => (\r\n            <li key={user.uid}>\r\n              <span>\r\n                <strong>ID:</strong> {user.uid}\r\n              </span>\r\n              <span>\r\n                <strong>E-Mail:</strong> {user.email}\r\n              </span>\r\n              <span>\r\n                <strong>Username:</strong> {user.username}\r\n              </span>{\" \"}\r\n              <span>\r\n                <Link\r\n                  to={{\r\n                    pathname: `${ROUTES.ADMIN}/${user.uid}`,\r\n                    state: { user }\r\n                  }}\r\n                >\r\n                  Details\r\n                </Link>\r\n              </span>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withFirebase(UserList);\r\n","import React, { Component } from 'react';\r\n\r\nimport { withFirebase } from '../Firebase';\r\n\r\nclass UserItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      loading: false,\r\n      user: null,\r\n      ...props.location.state,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.user) {\r\n      return;\r\n    }\r\n\r\n    this.setState({ loading: true });\r\n\r\n    this.props.firebase\r\n      .user(this.props.match.params.id)\r\n      .on('value', snapshot => {\r\n        this.setState({\r\n          user: snapshot.val(),\r\n          loading: false,\r\n        });\r\n      });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.firebase.user(this.props.match.params.id).off();\r\n  }\r\n\r\n  onSendPasswordResetEmail = () => {\r\n    this.props.firebase.doPasswordReset(this.state.user.email);\r\n  };\r\n\r\n  render() {\r\n    const { user, loading } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <h2>User ({this.props.match.params.id})</h2>\r\n        {loading && <div>Loading ...</div>}\r\n\r\n        {user && (\r\n          <div>\r\n            <span>\r\n              <strong>ID:</strong> {user.uid}\r\n            </span>\r\n            <span>\r\n              <strong>E-Mail:</strong> {user.email}\r\n            </span>\r\n            <span>\r\n              <strong>Username:</strong> {user.username}\r\n            </span>\r\n            <span>\r\n              <button\r\n                type=\"button\"\r\n                onClick={this.onSendPasswordResetEmail}\r\n              >\r\n                Send Password Reset\r\n              </button>\r\n            </span>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withFirebase(UserItem);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { AuthUserContext } from \"../Session\";\r\nimport { withFirebase } from \"../Firebase\";\r\n\r\nclass CreateMem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      url: \"\",\r\n      title: \"\",\r\n      tags: \"\"\r\n    };\r\n  }\r\n\r\n  onChangeUrl = event => {\r\n    this.setState({ url: event.target.value });\r\n  };\r\n\r\n  onChangeTitle = event => {\r\n    this.setState({ title: event.target.value });\r\n  };\r\n\r\n  onChangeTags = event => {\r\n    this.setState({ tags: event.target.value });\r\n  };\r\n\r\n  onSerializeTags = () => this.state.tags.split(\" \");\r\n\r\n  onCreateMem = (event, authUser) => {\r\n    let tags = [];\r\n\r\n    this.props.firebase.memes().push({\r\n      url: this.state.url,\r\n      userId: authUser.uid,\r\n      username: authUser.username,\r\n      createdAt: this.props.firebase.serverValue.TIMESTAMP,\r\n      title: this.state.title,\r\n      tags: this.onSerializeTags(),\r\n      comments: []\r\n    });\r\n\r\n    this.setState({ url: \"\", title: \"\", tags: \"\" });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    const { url, title, tags } = this.state;\r\n\r\n    return (\r\n      <AuthUserContext.Consumer>\r\n        {authUser => (\r\n          <div>\r\n            <form onSubmit={event => this.onCreateMem(event, authUser)}>\r\n              img src\r\n              <input type=\"text\" value={url} onChange={this.onChangeUrl} />\r\n              title\r\n              <input type=\"text\" value={title} onChange={this.onChangeTitle} />\r\n              tags\r\n              <input type=\"text\" value={tags} onChange={this.onChangeTags} />\r\n              <button type=\"submit\">Send</button>\r\n            </form>\r\n          </div>\r\n        )}\r\n      </AuthUserContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withFirebase(CreateMem);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { AuthUserContext } from \"../Session\";\r\nimport { withFirebase } from \"../Firebase\";\r\nimport CreateMem from \"./createMem\";\r\n\r\nclass MemesBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      loading: false,\r\n      memes: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.onListenForMemes();\r\n  }\r\n\r\n  onListenForMemes() {\r\n    this.setState({ loading: true });\r\n\r\n    this.props.firebase\r\n      .memes()\r\n\r\n      .on(\"value\", snapshot => {\r\n        // convert messages list from snapshot\r\n        const memObject = snapshot.val();\r\n\r\n        if (memObject) {\r\n          // convert messages list from snapshot\r\n          const memesList = Object.keys(memObject).map(key => ({\r\n            ...memObject[key],\r\n            uid: key\r\n          }));\r\n          this.setState({ loading: false, memes: memesList });\r\n        } else {\r\n          this.setState({ memes: null, loading: false });\r\n        }\r\n        this.setState({ loading: false });\r\n      });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.firebase.memes().off();\r\n  }\r\n\r\n  onEditMem = (mem, url, title, tags) => {\r\n    const { uid, ...memSnapshot } = mem;\r\n\r\n    this.props.firebase.mem(mem.uid).set({\r\n      ...memSnapshot,\r\n      url,\r\n      title,\r\n      tags,\r\n      editedAt: this.props.firebase.serverValue.TIMESTAMP\r\n    });\r\n  };\r\n\r\n  onRemoveMem = uid => {\r\n    this.props.firebase.mem(uid).remove();\r\n  };\r\n\r\n  render() {\r\n    const { memes, loading } = this.state;\r\n\r\n    return (\r\n      <AuthUserContext.Consumer>\r\n        {authUser => (\r\n          <div>\r\n            <CreateMem />\r\n            {memes ? (\r\n              <MemList\r\n                authUser={authUser}\r\n                memes={memes}\r\n                onRemoveMem={this.onRemoveMem}\r\n                onEditMem={this.onEditMem}\r\n              />\r\n            ) : (\r\n              <div>There are no memes ...</div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </AuthUserContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nconst MemList = ({ memes, onRemoveMem, onEditMem, authUser }) => (\r\n  <ul>\r\n    {memes.map(mem => (\r\n      <MemItem\r\n        key={mem.uid}\r\n        mem={mem}\r\n        onRemoveMem={onRemoveMem}\r\n        onEditMem={onEditMem}\r\n        authUser={authUser}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nclass MemItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      editUrlMode: false,\r\n      editUrl: this.props.mem.url,\r\n      editTitle: this.props.mem.title,\r\n      editTags: this.props.mem.tags.join(\" \")\r\n    };\r\n  }\r\n  onToggleEditUrlMode = () => {\r\n    this.setState(state => ({\r\n      editUrlMode: !state.editUrlMode,\r\n      editUrl: this.props.mem.url,\r\n      editTitle: this.props.mem.title\r\n    }));\r\n  };\r\n\r\n  onChangeEditUrl = event => {\r\n    this.setState({ editUrl: event.target.value });\r\n  };\r\n\r\n  onChangeEditTitle = event => {\r\n    this.setState({ editTitle: event.target.value });\r\n  };\r\n\r\n  onChangeEditTags = event => {\r\n    this.setState({ editTags: event.target.value });\r\n  };\r\n\r\n  onSaveEditUrl = () => {\r\n    this.props.onEditMem(\r\n      this.props.mem,\r\n      this.state.editUrl,\r\n      this.state.editTitle,\r\n      this.state.editTags.split(\" \")\r\n    );\r\n\r\n    this.setState({ editUrlMode: false });\r\n  };\r\n\r\n  render() {\r\n    const { mem, onRemoveMem } = this.props;\r\n    const { editUrlMode, editUrl, editTitle, editTags } = this.state;\r\n\r\n    return (\r\n      <li>\r\n        {editUrlMode ? (\r\n          <span>\r\n            <input\r\n              type=\"text\"\r\n              value={editTitle}\r\n              onChange={this.onChangeEditTitle}\r\n            />{\" \"}\r\n            <br />{\" \"}\r\n            <input\r\n              type=\"text\"\r\n              value={editUrl}\r\n              onChange={this.onChangeEditUrl}\r\n            />\r\n            <br />{\" \"}\r\n            <input\r\n              type=\"text\"\r\n              value={editTags}\r\n              onChange={this.onChangeEditTags}\r\n            />\r\n          </span>\r\n        ) : (\r\n          <span>\r\n            <img src={mem.url} alt=\"\" />\r\n          </span>\r\n        )}\r\n\r\n        {editUrlMode ? (\r\n          <div>\r\n            <button onClick={this.onSaveEditUrl}>Save</button>\r\n            <button onClick={this.onToggleEditUrlMode}>Return</button>\r\n          </div>\r\n        ) : (\r\n          <span>\r\n            <div>Title {mem.title}</div>\r\n            <div>URL {mem.url}</div>\r\n            <div>Tags {mem.tags}</div>\r\n            <button onClick={this.onToggleEditUrlMode}>Edit</button>\r\n          </span>\r\n        )}\r\n        {!editUrlMode && (\r\n          <button type=\"button\" onClick={() => onRemoveMem(mem.uid)}>\r\n            Delete\r\n          </button>\r\n        )}\r\n\r\n        <div />\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nwithFirebase(MemItem);\r\n\r\nexport default withFirebase(MemesBase);\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { compose } from \"recompose\";\r\n\r\nimport { withAuthorization, withEmailVerification } from \"../Session\";\r\nimport { UserList, UserItem } from \"../Users\";\r\nimport * as ROLES from \"../../constants/roles\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\nimport CreateMem from \"./createMem\";\r\nimport MemBrowser from \"../Memes/memBrowser\";\r\nimport ManageMemes from \"./manageMemes\";\r\n\r\nconst AdminPage = () => (\r\n  <div>\r\n    <h1>Admin Page</h1>\r\n    <p>The Admin Page is accessible by every signed in admin user.</p>\r\n    <Switch>\r\n      <Route exact path={ROUTES.ADMIN_MANAGE_MEMES} component={ManageMemes} />\r\n      <Route exact path={ROUTES.ADMIN_DETAILS} component={UserItem} />\r\n      <Route exact path={ROUTES.ADMIN} component={UserList} />\r\n    </Switch>\r\n  </div>\r\n);\r\n\r\nconst condition = authUser => authUser && authUser.roles.includes(ROLES.ADMIN);\r\nexport default compose(\r\n  withEmailVerification,\r\n  withAuthorization(condition)\r\n)(AdminPage);\r\n","import React, { Component } from \"react\";\r\n\r\nconst API = \"https://some-random-api.ml/meme\";\r\n\r\nclass RandomMem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      mem: {},\r\n      isLoading: false,\r\n      error: null\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getRandomMem();\r\n  }\r\n\r\n  getRandomMem = () => {\r\n    this.setState({ isLoading: true });\r\n\r\n    fetch(API)\r\n      .then(response => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else {\r\n          throw new Error(\"Something went wrong ...\");\r\n        }\r\n      })\r\n      .then(data => this.setState({ mem: data, isLoading: false }))\r\n      .catch(error => this.setState({ error, isLoading: false }));\r\n  };\r\n\r\n  render() {\r\n    const { mem, isLoading, error } = this.state;\r\n\r\n    if (error) {\r\n      return <p>{error.message}</p>;\r\n    }\r\n\r\n    if (isLoading) {\r\n      return <p>Loading ...</p>;\r\n    }\r\n\r\n    return (\r\n      <span>\r\n        <img src={mem.image} alt={mem.caption} />\r\n        <br />\r\n        <button onClick={this.getRandomMem}>Roll next!</button>\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RandomMem;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\n\r\nimport Navigation from \"../Navigation\";\r\nimport LandingPage from \"../Landing\";\r\nimport SignUpPage from \"../SignUp\";\r\nimport SignInPage from \"../SignIn\";\r\nimport PasswordForgetPage from \"../PasswordForget\";\r\nimport AccountPage from \"../Account\";\r\nimport AdminPage from \"../Admin\";\r\nimport RandomMem from \"../RandomMem\";\r\n\r\nimport * as ROUTES from \"../../constants/routes\";\r\nimport { withAuthentication } from \"../Session\";\r\n\r\nconst App = () => (\r\n  <Router>\r\n    <div>\r\n      <Navigation />\r\n\r\n      <Route exact path={ROUTES.LANDING} component={LandingPage} />\r\n      <Route path={ROUTES.RANDOM_MEM} component={RandomMem} />\r\n      <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\r\n      <Route path={ROUTES.SIGN_IN} component={SignInPage} />\r\n      <Route path={ROUTES.PASSWORD_FORGET} component={PasswordForgetPage} />\r\n      <Route path={ROUTES.ACCOUNT} component={AccountPage} />\r\n      <Route path={ROUTES.ADMIN} component={AdminPage} />\r\n    </div>\r\n  </Router>\r\n);\r\n\r\nexport default withAuthentication(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport App from './components/App';\r\nimport Firebase, { FirebaseContext } from './components/Firebase';\r\n\r\nReactDOM.render(\r\n  <FirebaseContext.Provider value={new Firebase()}>\r\n    <App />\r\n  </FirebaseContext.Provider>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}